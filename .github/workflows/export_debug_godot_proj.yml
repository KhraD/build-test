name: "Export Debug Godot Project"
on: 
  workflow_dispatch:
  push:
    branches:
      - 'debug'

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: build-test-debug
  PROJECT_PATH: .

jobs:
  pass-env:
    name: Pass Env
    runs-on: ubuntu-latest
    steps:
      - id: set-output
        run: echo "godot-version=${GODOT_VERSION}" >> $GITHUB_OUTPUT
    outputs:
      godot-version: ${{ steps.set-output.outputs.godot-version }}
      
  export-windows:
    name: Windows Export
    runs-on: ubuntu-latest
    needs: [pass-env]
    container:
      image: ghcr.io/khrad/godot-builder:${{ needs.pass-env.outputs.godot-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates ~/.local/share/godot/export_templates
          
          isDotnet=$(find . -name "project.godot" | grep -v "godot-cpp" | xargs cat | { grep "dotnet" || true; })          
          if [ -n "$isDotnet" ]; then
              echo "2" | update-alternatives --config godot >> /dev/null
          fi
          
          hasExtension=$(find . -name "godot-cpp")
          if [ -n "$hasExtension" ]; then
              scons platform=linux target=template_debug
          fi
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-debug "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-latest
    needs: [pass-env]
    container:
      image: ghcr.io/khrad/godot-builder:${{needs.pass-env.outputs.godot-version}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot
          mv /root/.local/share/godot/export_templates ~/.local/share/godot/export_templates
          
          isDotnet=$(find . -name "project.godot" | grep -v "godot-cpp" | xargs cat | { grep "dotnet" || true; })          
          if [ -n "$isDotnet" ]; then
              echo "2" | update-alternatives --config godot >> /dev/null
          fi
          
          hasExtension=$(find . -name "godot-cpp")
          if [ -n "$hasExtension" ]; then
              scons platform=linux target=template_debug
          fi
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-debug "Linux/X11" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux

  export-web:
    name: Web Export
    runs-on: ubuntu-latest
    needs: [pass-env]
    container:
      image: ghcr.io/khrad/godot-builder:${{needs.pass-env.outputs.godot-version}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot
          mv /root/.local/share/godot/export_templates ~/.local/share/godot/export_templates
          
          isDotnet=$(find . -name "project.godot" | grep -v "godot-cpp" | xargs cat | { grep "dotnet" || true; })          
          if [ -n "$isDotnet" ]; then
              echo "2" | update-alternatives --config godot >> /dev/null
          fi
          
          hasExtension=$(find . -name "godot-cpp")
          if [ -n "$hasExtension" ]; then
              scons platform=linux target=template_debug
          fi
      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-debug "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/web # The folder the action should deploy.

  export-mac:
    name: Mac Export
    runs-on: ubuntu-latest
    needs: [pass-env]
    container:
      image: ghcr.io/khrad/godot-builder:${{needs.pass-env.outputs.godot-version}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot
          mv /root/.local/share/godot/export_templates ~/.local/share/godot/export_templates
          
          isDotnet=$(find . -name "project.godot" | grep -v "godot-cpp" | xargs cat | { grep "dotnet" || true; })          
          if [ -n "$isDotnet" ]; then
              echo "2" | update-alternatives --config godot >> /dev/null
          fi
          
          hasExtension=$(find . -name "godot-cpp")
          if [ -n "$hasExtension" ]; then
              scons platform=linux target=template_debug
          fi
      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-debug "macOS" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac
          path: build/mac
  export-android:
    name: Android Export
    runs-on: ubuntu-latest
    needs: [pass-env]
    container:
      image: ghcr.io/khrad/godot-builder:${{needs.pass-env.outputs.godot-version}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot
          mv /root/.local/share/godot/export_templates ~/.local/share/godot/export_templates
          
          isDotnet=$(find . -name "project.godot" | grep -v "godot-cpp" | xargs cat | { grep "dotnet" || true; })          
          if [ -n "$isDotnet" ]; then
              echo "2" | update-alternatives --config godot >> /dev/null
          fi
          
          hasExtension=$(find . -name "godot-cpp")
          if [ -n "$hasExtension" ]; then
              scons platform=linux target=template_debug
          fi
      - name: Android Build
        run: |
          mkdir -v -p build/android
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-debug "Android" "$EXPORT_DIR/android/$EXPORT_NAME.apk"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: build/android